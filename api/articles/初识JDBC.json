{"title":"初识JDBC","slug":"初识JDBC","date":"2020-03-14T07:14:43.000Z","updated":"2020-03-16T12:11:37.674Z","comments":true,"path":"api/articles/初识JDBC.json","excerpt":null,"covers":["/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif","/images/loading.gif"],"content":"<p>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。</p>\n<p>简单地说，JDBC 可做三件事：与数据库建立连接、发送 操作数据库的指令并处理结果。</p>\n<p><b>连接JDBC的步骤</b></p>\n<ul>\n<li>加载驱动程序</li>\n<li>创建连接</li>\n<li>执行SQL语句</li>\n<li>关闭连接</li>\n</ul>\n<h2 id=\"下载MySQL\"><a href=\"#下载MySQL\" class=\"headerlink\" title=\"下载MySQL\"></a>下载MySQL</h2><p>先到<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"noopener\">mysql</a>官网下载<code>mysql</code>安装程序，选择你的操作系统平台，即可下载。下载完双击运行安装程序。</p>\n<p>先同意条款：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314163724.png\" alt=\"\"></p>\n<p>选择安装类型：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155034.png\" alt=\"\"></p>\n<p>检查依赖：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164042.png\" alt=\"\"></p>\n<p>开始安装：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164441.png\" alt=\"\"></p>\n<p>指定：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164827.png\" alt=\"\"></p>\n<p>设置<code>root</code>密码：</p>\n<p>其中默认<code>mysql</code>端口为3306，不建议更改。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314165001.png\" alt=\"\"></p>\n<p>后面按照他的提示来就行。</p>\n<p>安装完成后可以<code>cmd</code>中<code>mysql -u root -p</code>指定root账户登录<code>mysql</code>数据库。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155316.png\" alt=\"\"></p>\n<h2 id=\"下载驱动\"><a href=\"#下载驱动\" class=\"headerlink\" title=\"下载驱动\"></a>下载驱动</h2><p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314161421.png\" alt=\"\"></p>\n<p>还是到<code>mysql</code>的官网下载<code>mysql</code>的<a href=\"https://dev.mysql.com/downloads/connector/j/\" target=\"_blank\" rel=\"noopener\">JDBC</a>驱动程序。下载完成后得到一个压缩包，将压缩包解压，得到一个下面的目录。其中，我们所需的就是<code>mysql-connection-java-8.0.18.jar</code>包。（下载位置没有要求</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155703.png\" alt=\"\"></p>\n<h2 id=\"使用JDBC\"><a href=\"#使用JDBC\" class=\"headerlink\" title=\"使用JDBC\"></a>使用JDBC</h2><p>如图，我有个数据库<code>dbname</code>，库里有个表<code>stu</code>，表如图：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314163528.png\" alt=\"\"></p>\n<p>我想通过<code>JDBC</code>操作将 <code>小明</code> 改为 <code>小红</code> ，这时需要使用JDBC了。</p>\n<p>在idea打开的项目中左上角选择<code>File-&gt;Project Structure-&gt;Project Settings-&gt;Modules</code>, 然后选择其中的<code>Dependencies</code>选项卡，然后点击右上角绿色的”+”号，选择<code>JARs or directories</code>, 选中你刚刚放到lib目录中的<code>mysql-connector-java-8.0.18.jar</code>，然后点击”OK”。首先将前面解压的<code>mysql-connection-java-8.0.18.jar</code>包复制，然后</p>\n<p>如图：点击右边的<code>+</code>，选择<code>JARs or directories</code>，会弹出一个框，选择你上面解压后的<code>mysql-connection-java-8.0.18.jar</code>包，</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315135207.png\" alt=\"\"></p>\n<p>上一步执行过后，可以在你的项目下面<code>External Libraries</code>里面看到<code>mysql-connection-java-8.0.18.jar</code>,此时驱动程序已经准备好了。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315140646.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>Connection<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>DriverManager<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>ResultSet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>Statement<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo_JDBC</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception\n    <span class=\"token punctuation\">{</span>\n        Class<span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        String url <span class=\"token operator\">=</span>\n        <span class=\"token string\">\"jdbc:mysql://localhost:3306/dbnameserverTimezone=UTC&amp;characterEncoding=utf-8\"</span><span class=\"token punctuation\">;</span>\n        String user <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n        String password <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">;</span>\n        Connection connection <span class=\"token operator\">=</span> DriverManager<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>user<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update stu set name  = '小红'  where name = '小明' \"</span><span class=\"token punctuation\">;</span>\n        Statement st <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        st<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意：<code>mysql</code>新版本不加<code>serverTimezone=UTC&amp;characterEncoding=utf-8</code>这一段会抛出异常，似乎是因为时区原因。还有<code>com.mysql.jdbc.Driver</code>要写成<code>com.mysql.cj.jdbc.Driver</code>。</p>\n<p>此时，刷新一下表，可以看到<code>小明</code>已经变为<code>小红</code>了。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315141424.png\" alt=\"\"></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","more":"<p>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。</p>\n<p>简单地说，JDBC 可做三件事：与数据库建立连接、发送 操作数据库的指令并处理结果。</p>\n<p><b>连接JDBC的步骤</b></p>\n<ul>\n<li>加载驱动程序</li>\n<li>创建连接</li>\n<li>执行SQL语句</li>\n<li>关闭连接</li>\n</ul>\n<h2 id=\"下载MySQL\"><a href=\"#下载MySQL\" class=\"headerlink\" title=\"下载MySQL\"></a>下载MySQL</h2><p>先到<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"noopener\">mysql</a>官网下载<code>mysql</code>安装程序，选择你的操作系统平台，即可下载。下载完双击运行安装程序。</p>\n<p>先同意条款：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314163724.png\" alt=\"\"></p>\n<p>选择安装类型：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155034.png\" alt=\"\"></p>\n<p>检查依赖：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164042.png\" alt=\"\"></p>\n<p>开始安装：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164441.png\" alt=\"\"></p>\n<p>指定：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314164827.png\" alt=\"\"></p>\n<p>设置<code>root</code>密码：</p>\n<p>其中默认<code>mysql</code>端口为3306，不建议更改。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314165001.png\" alt=\"\"></p>\n<p>后面按照他的提示来就行。</p>\n<p>安装完成后可以<code>cmd</code>中<code>mysql -u root -p</code>指定root账户登录<code>mysql</code>数据库。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155316.png\" alt=\"\"></p>\n<h2 id=\"下载驱动\"><a href=\"#下载驱动\" class=\"headerlink\" title=\"下载驱动\"></a>下载驱动</h2><p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314161421.png\" alt=\"\"></p>\n<p>还是到<code>mysql</code>的官网下载<code>mysql</code>的<a href=\"https://dev.mysql.com/downloads/connector/j/\" target=\"_blank\" rel=\"noopener\">JDBC</a>驱动程序。下载完成后得到一个压缩包，将压缩包解压，得到一个下面的目录。其中，我们所需的就是<code>mysql-connection-java-8.0.18.jar</code>包。（下载位置没有要求</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314155703.png\" alt=\"\"></p>\n<h2 id=\"使用JDBC\"><a href=\"#使用JDBC\" class=\"headerlink\" title=\"使用JDBC\"></a>使用JDBC</h2><p>如图，我有个数据库<code>dbname</code>，库里有个表<code>stu</code>，表如图：</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200314163528.png\" alt=\"\"></p>\n<p>我想通过<code>JDBC</code>操作将 <code>小明</code> 改为 <code>小红</code> ，这时需要使用JDBC了。</p>\n<p>在idea打开的项目中左上角选择<code>File-&gt;Project Structure-&gt;Project Settings-&gt;Modules</code>, 然后选择其中的<code>Dependencies</code>选项卡，然后点击右上角绿色的”+”号，选择<code>JARs or directories</code>, 选中你刚刚放到lib目录中的<code>mysql-connector-java-8.0.18.jar</code>，然后点击”OK”。首先将前面解压的<code>mysql-connection-java-8.0.18.jar</code>包复制，然后</p>\n<p>如图：点击右边的<code>+</code>，选择<code>JARs or directories</code>，会弹出一个框，选择你上面解压后的<code>mysql-connection-java-8.0.18.jar</code>包，</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315135207.png\" alt=\"\"></p>\n<p>上一步执行过后，可以在你的项目下面<code>External Libraries</code>里面看到<code>mysql-connection-java-8.0.18.jar</code>,此时驱动程序已经准备好了。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315140646.png\" alt=\"\"></p>\n<pre><code class=\"java\">import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\n\npublic class Demo_JDBC\n{\n    public static void main(String[] args) throws Exception\n    {\n        Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);\n        String url =\n        &quot;jdbc:mysql://localhost:3306/dbnameserverTimezone=UTC&amp;characterEncoding=utf-8&quot;;\n        String user = &quot;root&quot;;\n        String password = &quot;123456&quot;;\n        Connection connection = DriverManager.getConnection(url,user,password);\n        String sql = &quot;update stu set name  = &#39;小红&#39;  where name = &#39;小明&#39; &quot;;\n        Statement st = connection.createStatement();\n        int a = st.executeUpdate(sql);\n        System.out.println(a);\n        st.close();\n        connection.close();\n    }\n}\n</code></pre>\n<p>注意：<code>mysql</code>新版本不加<code>serverTimezone=UTC&amp;characterEncoding=utf-8</code>这一段会抛出异常，似乎是因为时区原因。还有<code>com.mysql.jdbc.Driver</code>要写成<code>com.mysql.cj.jdbc.Driver</code>。</p>\n<p>此时，刷新一下表，可以看到<code>小明</code>已经变为<code>小红</code>了。</p>\n<p><img src=\"/images/loading.gif\" data-original=\"https://raw.githubusercontent.com/axh2018/picgo_picture/master/20200315141424.png\" alt=\"\"></p>\n","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"JDBC","path":"api/tags/JDBC.json"}]}